[tool:pytest]
# Pytest configuration for YMemo audio processing pipeline tests

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output and reporting
addopts =
    -v
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --color=yes

# Markers for test categorization
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    performance: marks tests as performance tests
    smoke: marks tests as smoke tests

# Minimum test coverage
minversion = 6.0

# Timeout for tests (5 minutes max)
timeout = 300

# Asyncio configuration
asyncio_mode = auto

# Warning filters
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::RuntimeWarning:pyaudio
    ignore::UserWarning:gradio
    ignore::RuntimeWarning:unittest.mock
    ignore::RuntimeWarning:_pytest.unraisableexception
    ignore:coroutine.*was never awaited:RuntimeWarning
    ignore:.*AsyncMockMixin.*was never awaited:RuntimeWarning
    ignore:.*Enable tracemalloc.*:RuntimeWarning

# Log configuration
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage configuration (if using pytest-cov)
[coverage:run]
source = src
omit =
    */tests/*
    */venv/*
    */env/*
    */.venv/*
    setup.py
    */site-packages/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

show_missing = True
skip_covered = False
precision = 2

[coverage:html]
directory = coverage_reports/html
