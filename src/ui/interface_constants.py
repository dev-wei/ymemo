"""Constants for the UI interface."""

import gradio as gr

# Theme configurations
AVAILABLE_THEMES = {
    "Default": gr.themes.Default(),
    "Soft": gr.themes.Soft(),
    "Monochrome": gr.themes.Monochrome(),
    "Glass": gr.themes.Glass(),
    "Origin": gr.themes.Origin(),
    "Citrus": gr.themes.Citrus(),
    "Ocean": gr.themes.Ocean(),
    "Base": gr.themes.Base(),
}

# Default theme
DEFAULT_THEME = "Ocean"

# Button text constants
BUTTON_TEXT = {
    "start_recording": "üé§ Start Recording",
    "stop_recording": "‚èπÔ∏è Stop Recording",
    "save_meeting": "üíæ Save as New Meeting",
    "download_transcript": "üìÑ Download Transcript",
    "clear_dialog": "üóëÔ∏è Clear",
    "starting": "üîÑ Starting...",
    "stopping": "‚è≥ Stopping...",
    "refresh_devices": "üîÑ Refresh Devices",
}

# UI text constants
UI_TEXT = {
    "app_title": "üé§ Voice Meeting App",
    "app_subtitle": "### Real-time speech transcription with speaker identification",
    "meeting_list_title": "### Meeting List",
    "live_dialog_title": "### Live Dialog",
    "audio_controls_title": "### Audio Controls",
    "sidebar_settings_title": "### ‚öôÔ∏è Settings",
    "sidebar_performance_title": "### üìä Performance",
}

# Placeholder text constants
PLACEHOLDER_TEXT = {
    "meeting_name": "Enter meeting name...",
    "transcription_dialog": "Transcription will appear here when recording starts...",
}

# UI dimensions
UI_DIMENSIONS = {
    "dialog_height": 800,
    "timer_interval": 0.5,
    "sidebar_width": 320,
}

# Table headers
TABLE_HEADERS = {"meeting_list": ["ID", "Meeting", "Date", "Duration", "Length"]}

# Form labels
FORM_LABELS = {
    "meeting_name": "Meeting Name",
    "duration": "Duration",
    "audio_device": "Audio Device",
    "status": "Status",
    "theme_selector": "Theme",
    "audio_quality": "Audio Quality",
    "language": "Language",
    "language_selection": "Language Selection",
    "language_info": "Language Information",
    "transcription_provider": "Transcription Provider",
    "provider_details": "Provider Details",
    "connection_status": "Connection Status",
    "session_duration": "Session Duration",
    "audio_level": "Audio Level",
    "memory_usage": "Memory Usage",
}

# Duration formatting
DURATION_FORMAT = {
    "default_display": "00:00",
    "zero_display": "00:00",
    "separator": ":",
    "show_hours_threshold": 3600,  # Show hours when duration >= 1 hour
}

# Default values
DEFAULT_VALUES = {
    "duration_display": DURATION_FORMAT["default_display"],
    "no_devices": "No devices",
    "connection_status": "<span style='color: green;'>‚óè Connected</span>",
    "audio_quality": "High",
    "language_selection": "English (US)",  # Updated to match language config
    "transcription_provider": "AWS Transcribe",  # Default provider for display
    "audio_level": "Normal",
    "memory_usage": "45MB",
    "language_change_success": "‚úÖ Language updated successfully",
    "language_change_error": "‚ùå Failed to change language",
    "provider_change_success": "‚úÖ Provider updated successfully",
    "provider_change_error": "‚ùå Failed to change provider",
    "provider_not_available": "‚ö†Ô∏è Provider not available",
}

# Copy functionality
COPY_CONFIG = {"watermark": "Generated by Voice Meeting App"}


# Audio configuration - now uses system config instead of hardcoded values
def get_audio_config():
    """Get audio configuration from centralized config system."""
    from config.audio_config import get_config

    system_config = get_config()
    return {
        "region": system_config.aws_region,
        "language_code": system_config.aws_language_code,
    }


# Legacy constant for backwards compatibility (deprecated - use get_audio_config())
AUDIO_CONFIG = get_audio_config()
